
model {
# Prior distributions
beta0 ~ dnorm(0, 0.01) # Intercept for log(lambda)
mean.lam <- exp(beta0)
beta1 ~ dnorm(0, 0.01) # Coefficient of roads on lambda
beta2 ~ dnorm(0,0.01) # Coefficient of public land
phi0 ~ dunif(0,1) # Probability of availability
alpha0 <- exp(phi0)/(1+exp(phi0))
alpha1 ~ dnorm(0,0.01)
alpha2 ~ dnorm(0,0.01)
sigma ~ dunif(0.01,5) # Distance function parameter
gamma0 ~ dnorm(0,0.01)
gamma1 ~ dnorm(0,0.01)
gamma2 ~ dnorm(0,0.01)

r ~ dunif(0,20)


  for(b in 1:nD){
    log(g[b]) <- -midpt[b]*midpt[b]/(2*sigma*sigma) # half-normal
    f[b] <- delta/B # density function
    cellprobs[b] <- g[b]*f[b]
    cellprobs.cond[b] <- cellprobs[b]/sum(cellprobs[1:nD])
  }
  cellprobs[nD+1] <- 1-sum(cellprobs[1:nD])

  for (s in 1:nsites) {
    
    logit(phi[s]) <- alpha0 + alpha1*roads[s] + alpha2*land[s]

    for (k in 1:nreps[s]) {
      pdet[s,k] <- sum(cellprobs[1:nD]) # Distance class probabilities
      pmarg[s,k] <- pdet[s,k]*phi[s] # Marginal probability
      y3d[s,1:nD,k] ~ dmulti(cellprobs.cond[1:nD], nobs[s,k])
      nobs[s,k] ~ dbin(pmarg[s,k], M[s])
    } 

    for (k in 1:K){
      Navail[s,k] ~ dbin(phi[s], M[s])
    }
  M[s] ~ dpois(lambda[s])
  log(lambda[s]) <- log(area[s]) + beta0 + beta1*roads[s] +beta2*land[s]
  } 

  for(i in 1:ngroup){
    groupsize[i] ~ dnegbin(probs[site[i]],r)
  }

  for(s in 1:nsites){
    log(gamma[s]) <- gamma0 + gamma1*roads[s] + gamma2*land[s]
    probs[s]<-r/(r+gamma[s])
  }
  
# Derived quantities
  Mtot <- sum(M[])

  for(k in 1:K){
    Ntot[k]<- sum(Navail[,k])
    D[k]<-sum(Navail[,k]*gamma[])/(2*B*434.8) # total length of all transects is 434.8 km
  }
} 
