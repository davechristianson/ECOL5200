
model {

  beta0 ~ dnorm(0, 0.01)  
  mean.lam <- exp(beta0)
  beta1 ~ dnorm(0, 0.01) # prior for road density effect on log lambda  
  beta2 ~ dnorm(0, 0.01) # prior for public land effect on log lambda 
  phi ~ dunif(0,1)        
  sigma ~ dunif(0.01,5)   
  gamma0 ~ dnorm(0, 0.01) # prior for groupsize intercept
  gamma1 ~ dnorm(0, 0.01) # prior for road density effect on gamma
  gamma2 ~ dnorm(0, 0.01) # prior for public land effect on on gamma

  for(b in 1:nD){
    log(g[b]) <- -midpt[b]*midpt[b]/(2*sigma*sigma) 
    f[b] <-  (2*midpt[b]*delta)/(B*B) # specify uniform density function for each distance class
    cellprobs[b] <- g[b]*f[b]
    cellprobs.cond[b] <- cellprobs[b]/sum(cellprobs[1:nD])
  }
  cellprobs[nD+1]<- 1-sum(cellprobs[1:nD])
  for (s in 1:nsites) {
    for (k in 1:nreps[s]) { # We cannot loop up to K for each site because most sites were not surveyed k times. We must only loop up to the site-specific maximum number of replicates conducted.  you need to add a reference to a value that is specific to each site here.
    
      pdet[s,k] <- sum(cellprobs[1:nD])   
      pmarg[s,k] <- pdet[s,k]*phi
      y3d[s,1:nD,k] ~ dmulti(cellprobs.cond[1:nD], nobs[s,k])
      nobs[s,k] ~ dbin(pmarg[s,k], M[s])

    }  
    for (k in 1:K){
        Navail[s,k] ~ dbin(phi, M[s])
    }

    M[s] ~ dpois(lambda[s])
    log(lambda[s]) <- log(area[s]) + beta0 + beta1*roads[s] + beta2*land[s]  
    log(gamma[s]) <- gamma0 + gamma1*roads[s] + gamma2*land[s] #create a GLM for mean expected group size at each site as influenced by roads and land
  }  
  
  for(i in 1:ngroup){
    groupsize[i] ~ dpois(gamma[site[i]]) # the observed groupsize is distributed as.....
  }
  
  Mtot <- sum(M[])
  for(k in 1:K){
    Ntot[k]<- sum(Navail[,k])
    D[k]<-sum(Navail[,k]*gamma[])/(2*B*434.8) # Density across the entire study area in each replicate, numerator is total number of individuals. What goes in the denominator? you will need to know the total length of all sites is 434.8 km to put the correct area  in the denominator
  }
  Davg<-mean(D[])  # overall average density of pronghorn across all replicates
  
} 
